<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
<link href="../layout/styles.css" rel="stylesheet" type="text/css"/>
<script src="../scripts/scripts.js" type="text/javascript"></script>
<title>TDC Registers</title>
</head>
<body>


<h2>Hit Counters &amp; TDC Registers</h2>
<form acion="">
<table class="form"><tr class="head"><th colspan=2>Configuration
<tr title="4-digit hex board address for data query"><td>Board
    <td><input onChange="setValues()" type="text" id="form_board" name="board" maxlength="4" value="fe48">
<tr title="list of 4-digit hex addresses of boards to show"><td>Filter
    <td><input onChange="setValues()" type="text" id="form_filter" name="filter"  value="" >
<tr title="Number of TDC channels to show"><td># of Channels
    <td><input onChange="setValues()" type="text" id="form_channels" name="channels" maxlength="3" value="65">
<tr title="Update interval in milliseconds, separate for first and second table"><td>Update Interval (ms)
    <td><input onChange="setValues()" type="text" id="form_rate" name="rate" maxlength="5" value="2000">
        <input onChange="setValues()" type="text" id="form_rate2" name="rate2" maxlength="5" value="5000">
<tr title="For huge set-ups, enable this to split data queries in several smaller chunks"><td>Split Table
    <td><input onChange="setValues()" type="checkbox" id="form_split" name="split" value="2">
<tr title="Show only the difference of input signal counters since the last read-out, not absolute value"><td>Differences
    <td><input onChange="setValues()" type="checkbox" id="form_diff" name="diff" value="1">
<tr title="1. Enable display of current input status. 2. Show control buttons for channel enable/disable"><td>Input Status/Enable
    <td><input onChange="setValues()" type="checkbox" id="form_status" name="status" value="1">&nbsp;
        <input onChange="setValues()" type="checkbox" id="form_enable" name="enable" value="1">
<tr title="Just for your convenience, you actually don't need this button..."><td>
    <td><input type="button" onClick="setValues()" value="OK">
</table>
</form>

<div style="float:left"><table id="content"><tr><th>Channel<th>Value</table></div>
<div style="float:left"><table id="contentregs"><tr><th>Register<th>Values</table></div>


<script language="javascript">
var updaterate = document.getElementById("form_rate").value;
var updaterate2= document.getElementById("form_rate2").value;
var filter     = document.getElementById("form_filter").value;
var board      = document.getElementById("form_board").value;
var channels   = document.getElementById("form_channels").value;
var split      = document.getElementById("form_split").checked?"-2":"";
var differences= document.getElementById("form_diff").checked;
var showstatus = document.getElementById("form_status").checked;
var showenable = document.getElementById("form_enable").checked;
var oldvalues = {};


var reglist = "0-c100-c104-c105-c106-c107-c108-c109-c10a-c10b-c10c-c10d-c10f-c110-c111-c112-c800-c801-c802-c803";
//var reglist = "0-80-83-84-85-86-87-88-89-8a-8b-8c-8d-8f-90-c0-c2-c3";

var regs = reglist.split('-');
var regnames = new Array("Temperature","debug_wr<br>debug_rd<br>channels<br>ref input",
                         "valid trg","valid tmg trg","valid notmg","invalid trg","multi trg",
                         "spurious trg","wrong rdo","spikes","idle time","wait time",
                         "releases","rdo time","timeout number","data finished number","Logic Anal.<br>Debug Mode<br>Run Mode",
			 "window en.<br>window bef.<br>window aft.","act chan 1","act chan 2");

var updateTask;
var updateRegsTask;
var enableGroup = new Array();
for(i=0;i<1000;i++) enableGroup[i] = new Array();

function settimers(time1,time2) {

  if(time1 != -1) {
    if(!time1) time1 = updaterate;
    clearTimeout(updateTask);
    updateTask = setTimeout("getdata('../commands/get.pl?"+board+"-c000-"+channels+split+"',update)",time1);
    }
    
  if(time2 != -1) {
    if(!time2) time2 = updaterate2;
    clearTimeout(updateRegsTask);
    updateRegsTask = setTimeout("getdata('../commands/getmultreg.pl?"+board+"-"+reglist+"',updateregs)",time2);
    }
  }


function update(data) {
  if(!document.getElementById("content").innerHTML) return;
  var b = data.split("&");
  var c = {};
  var isShown = new Array();
  o = "<tr class=\"head\"><th>Reg<th>Channel";

  for(j=0;j<b.length-1;j++) {
    c[j] = b[j].split(" ");
    if(!oldvalues[j]) oldvalues[j] = c[j];
    if(filter == "" || filter.indexOf(c[j][0]) != -1)
      isShown[j] = 1;
    else
      isShown[j] = 0;
    if(isShown[j])
      o += "<th>"+c[j][0];
    } 
  if(showenable) {
    o += "<tr><td><td>Channel group";
    for(j=0;j<b.length-1;j++) {
      if(isShown[j]) {
        o += "<th>";
        for(k=3;k>=0;k--) {
          o += "<span style=\"display:block;float:left;width:20px;font-size:80%\">"+k+"</span>";
          }
        o+="<br>";
        for(k=3;k>=0;k--) {
          o += "<input class=\"onoffbutton\" type=\"button\" onClick=\"setEnableBlock(this,'"+c[j][0]+"',"+k+",1)\" value=\"on\">";
          }
        o += "<br>";
        for(k=3;k>=0;k--) {
          o += "<input class=\"onoffbutton\" type=\"button\" onClick=\"setEnableBlock(this,'"+c[j][0]+"',"+k+",0)\" value=\"off\">";
          }
        }
      }
    }
  for(i = 1; i <= channels; i++) {
    o += "<tr class=\""+(i%2?"odd":"even")+"\"><th>"+(i-1+0xc000).toString(16)+"<th>"+(i-1);
    for(j=0;j<b.length-1;j++) {
      if(isShown[j]) {
        if(differences) {
          val = (c[j][i] & 0xFFFFFF)- ((oldvalues[j][i]||0) & 0xFFFFFF);
          if (val < 0) {
            val += 0x1000000;
            }
          }
        else {
          val = c[j][i] & 0xFFFFFF;
          }
        if(showstatus)
          o += "<td class=\""+((c[j][i] &0x80000000)?"over":"under")+"\">";
        else
          o += "<td>";
        o += (val);
        if(showenable && i!=1) {
          checked = (enableGroup[j][Math.floor((i-2)/32)]&1<<(i-2)%32)?"checked":"";
          o += "<input class=\"checkbox\" type=\"checkbox\" onClick=\"setEnable(this,'"+c[j][0]+"',"+(i-2)+")\" "+checked+">";
          }
        }
      }
    }
  oldvalues = c;
  document.getElementById("content").innerHTML  = o;
  settimers(0,-1);
  }
  
function setValues() {
  updaterate = document.getElementById("form_rate").value;
  updaterate2= document.getElementById("form_rate2").value;
  board      = document.getElementById("form_board").value;
  filter     = document.getElementById("form_filter").value;
  split      = document.getElementById("form_split").checked?"-2":"";
  differences= document.getElementById("form_diff").checked;
  showstatus = document.getElementById("form_status").checked;
  channels   = document.getElementById("form_channels").value;
  showenable = document.getElementById("form_enable").checked;
  settimers(200,50);
  
  }

function setEnable(e,board,channel) {
  reg = Math.floor(channel/32) + 0xc802;
  op  = e.checked?"set":"clr";
  getdata("../commands/putbit.pl?"+board+"-"+reg.toString(16)+"-"+op+"-"+(1<<(channel%32)).toString(16),0);
  settimers(200,50);
  }

function setEnableBlock(e,board,channel,val) {
  reg = Math.floor(channel/2) + 0xc802;
  op  = val?"set":"clr";
  value = channel%2?0xffff0000:0xffff;
  getdata("../commands/putbit.pl?"+board+"-"+reg.toString(16)+"-"+op+"-"+value.toString(16),0);
  settimers(200,50);
  }  
  
function setRunMode(e,board,val) {
   reg = 0xc800;
   op  = val?"set":"clr";
   value = 0x1000;
   getdata("../commands/putbit.pl?"+board+"-"+reg.toString(16)+"-"+op+"-"+value.toString(16),0);
  settimers(200,50);
  }

function setEnableWindow(e,board,val) {
   reg = 0xc801;
   op  = val?"set":"clr";
   value = 0x80000000;
   getdata("../commands/putbit.pl?"+board+"-"+reg.toString(16)+"-"+op+"-"+value.toString(16),0);
  settimers(200,50);
  }
  
function updateregs(data) {
  if(!document.getElementById("contentregs").innerHTML) return;
  var b = data.split("&");
  var c = {};
  var isShown = new Array();
  o = "<tr class=\"head\"><th>Reg<th>Content";

  for(j=0;j<b.length-1;j++) {
    c[j] = b[j].split(" ");
    if(filter == "" || filter.indexOf(c[j][0]) != -1)
      isShown[j] = 1;
    else
      isShown[j] = 0;
    if(isShown[j])
      o += "<th>"+c[j][0];
    } 
  
  for(i = 0; i < 20; i++) {
    o += "<tr class=\""+(i%2?"odd":"even")+"\"><th>"+regs[i]+"<td>"+regnames[i];

    
    for(j=0;j<b.length-1;j++) {
        if(isShown[j]) {
        val = c[j][i+1];
        o += "<td>";
        if(i==0) {
          o += ((val>>20)/16).toFixed(1);
          }
        else if(i==1) {
          o += (val&0xF).toString(16)+"<br>"+((val&0xF0)>>4).toString(16)+"<br>"+((val&0xff00)>>8)+"<br>";
          if((val>>16 & 1)) 
            o += "<span class=\"over\" style=\"background:#faa;display:block;width:100%;float:right\">";
          o += (val>>16 & 1);
          if((val>>16 & 1)) 
            o += "</span>";
          }
        else if(i==16) {
          o += (val&0xF)+"<br>"+((val&0x10)>>4)+"<br>";
	  if(val>>12 & 1)
	    o += "<input title=\"Current run mode is triggerless. The epoch and coarse counters are never reset.\" class=\"triggerbutton\" type=\"button\" onClick=\"setRunMode(this,'"+c[j][0]+"',0)\" value=\"Triggerless\">";
	  else
	    o += "<input title=\"Current run mode is triggered. The epoch and coarse counters are reset after every trigger window.\" class=\"triggerbutton\" type=\"button\" onClick=\"setRunMode(this,'"+c[j][0]+"',1)\" value=\"Triggered\">";
	}
	else if(i==17) {
	  o += "<input class=\"onoffbutton\" type=\"button\" onClick=\"setEnableWindow(this,'"+c[j][0]+"',1)\" value=\"on\">";
	  o += "<input class=\"onoffbutton\" type=\"button\" onClick=\"setEnableWindow(this,'"+c[j][0]+"',0)\" value=\"off\">";
	  if ((val&0x80000000))
	    o += "Enabled";
	  else
	    o += "Disabled";
          o += "<br>"+(val&0x7FF)+"<br>"+((val&0x7ff0000)>>16);
          }
	else if(i==18 || i==19) {
          o += (val*1.).toString(16);
          if(i==18) enableGroup[j][0] = val*1.;
          if(i==19) enableGroup[j][1] = val*1.;
          }
        else {
          o += val;
          }
        }
      }
    }
  document.getElementById("contentregs").innerHTML  = o;
  settimers(-1,0);
  }
  

settimers(200,50);
  
</script>
</body></html>
