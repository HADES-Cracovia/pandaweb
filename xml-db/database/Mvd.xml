<?xml version="1.0"  encoding="utf-8" ?>
<TrbNetEntity xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="../schema/TrbNetEntity.xsd"
              name="Mvd"
              address="8000"
              >
  <description>Registers for the MVD ROC</description>

  <!-- this is just a very minimal version -->
  <group name="RocStatus"
         address="0000"  size="4"  purpose="status"  mode="r"  continuous="true">

    <register name="RocInput" address="0000" purpose="status">
      <description>Status information of the ROC input buffer</description>
      <field name="FifoEmpty" start="0" bits="1" format="boolean" >
        <description>The input data fifo is empty</description>
      </field>
      <field name="FifoAlmostFull" start="1" bits="1" format="boolean" errorflag="true" >
        <description>The input data fifo is almost full</description>
      </field>
      <field name="FifoFull" start="2" bits="1" format="boolean" errorflag="true" >
        <description>The input data fifo is full</description>
      </field>
      <field name="DataOut" start="4" bits="2" format="binary" >
        <description>The input data lines after the fifo</description>
      </field>
      <field name="DataValid" start="7" bits="1" format="boolean" >
        <description>The input data is valid</description>
      </field>
      <field name="ClockActive" start="11" bits="1" format="boolean" invertflag="true" errorflag="true" >
        <description>The input clock is active</description>
      </field>
      <field name="ClockCounter" start="11" bits="4" format="unsigned"  >
        <description>Counter to check activity of the input data clock</description>
      </field>
      <field name="ToggleFF" start="16" bits="1" format="bitmask"  >
        <description>Toggle Flipflop monitoring changes on the input data clock</description>
      </field>
      
    </register>
  </group>

</TrbNetEntity>

<!--
  STATUS(15 downto  0) <= sr0;
  STATUS(31 downto 16) <= sr1;
  STATUS(47 downto 32) <= buf_data_0;
  STATUS(63 downto 48) <= buf_data_1;
  
  STATUS(67 downto 64) <= "000" & buf_dataready;
  STATUS(71 downto 68) <= std_logic_vector(pos);
  STATUS(75 downto 72) <= "00" & start & run; 
  STATUS(79 downto 76) <= trailer_too_late & "0" & header_detected & trailer_detected;
  STATUS(95 downto 80) <= std_logic_vector(wait_cycles);
  
  -->
